name: Presentation request approval

on:
  pull_request_target:
    paths:
      - 'presentations/Semaine*/readme.md'

jobs:
  validate-and-approve:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write  # Added for merging
      issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: presentations/Semaine*/readme.md
          base_sha: ${{ github.event.pull_request.base.sha }}
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Validate changes
        id: validate
        run: |
          # Check if only one readme file was changed
          changed_files=(${{ steps.changed-files.outputs.all_changed_files }})
          if [ ${#changed_files[@]} -ne 1 ]; then
            echo "Erreur: Un seul fichier readme.md doit être modifié"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          file=${changed_files[0]}
          
          # Check if file matches expected pattern
          if [[ ! "$file" =~ ^presentations/Semaine[0-9]{2}/readme\.md$ ]]; then
            echo "Erreur: Le fichier ne correspond pas au pattern attendu presentations/SemaineXX/readme.md"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Get the diff for the changed file
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} -- "$file" > diff.txt
          
          # Count lines that were added/removed (excluding context lines)
          added_lines=$(grep "^+" diff.txt | grep -v "^+++" | wc -l)
          removed_lines=$(grep "^-" diff.txt | grep -v "^---" | wc -l)
          
          # Extract actual changes (ignoring +/- prefixes)
          added_content=$(grep "^+" diff.txt | grep -v "^+++" | sed 's/^+//')
          removed_content=$(grep "^-" diff.txt | grep -v "^---" | sed 's/^-//')
          
          # Validate scenarios
          valid=false
          
          # Nom field changed
          if [ $added_lines -eq 1 ] && [ $removed_lines -eq 1 ]; then
            if echo "$removed_content" | grep -q "^- Nom:$" && 
               echo "$added_content" | grep -q "^- Nom: .*[^ ].*$"; then
              valid=true
            fi
          fi
          
          # One Nom and one Présentation field changed
          if [ $added_lines -eq 2 ] && [ $removed_lines -eq 2 ]; then
            # Check if we have one Nom change and one Présentation change
            nom_removed=$(echo "$removed_content" | grep "^- Nom:$" | wc -l)
            nom_added=$(echo "$added_content" | grep "^- Nom: .*[^ ].*$" | wc -l)
            pres_removed=$(echo "$removed_content" | grep "^- Présentation:$" | wc -l)
            pres_added=$(echo "$added_content" | grep "^- Présentation: .*[^ ].*$" | wc -l)
            
            if [ $nom_removed -eq 1 ] && [ $nom_added -eq 1 ] && 
               [ $pres_removed -eq 1 ] && [ $pres_added -eq 1 ]; then
              valid=true
            fi
          fi
          
          # Présentation field changed
          if [ $added_lines -eq 1 ] && [ $removed_lines -eq 1 ]; then
            if echo "$removed_content" | grep -q "^- Présentation:$" && 
               echo "$added_content" | grep -q "^- Présentation: .*[^ ].*$"; then
              valid=true
            fi
          fi
          
          if [ "$valid" = true ]; then
            echo "valid=true" >> $GITHUB_OUTPUT
          else
            echo "Erreur: Les modifications ne correspondent pas aux patterns autorisés"
            echo "valid=false" >> $GITHUB_OUTPUT
          fi

      - name: Add approval label
        if: steps.validate.outputs.valid == 'true'
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          gh pr review ${{ github.event.pull_request.number }} --approve --body "Auto-approuvé."
          
          # Merge
          gh pr merge ${{ github.event.pull_request.number }} --squash

      - name: Comment on invalid PR
        if: steps.validate.outputs.valid == 'false'
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "Cette PR ne peut pas être auto-approuvée. Seules les modifications suivantes sont autorisées dans les fichiers readme:
          
          1. Modifier un seul champ 'Nom:' de vide à rempli (ex: 'Nom:' → 'Nom: Tim Toady')
          2. Modifier un champ 'Nom:' ET son champ 'Présentation:' correspondant
          3. Modifier un seul champ 'Présentation:' de vide à rempli
          
          Veuillez vous assurer que vos modifications correspondent exactement à l'un de ces patterns et n'affectent qu'un seul fichier readme.md dans un dossier Semaine."
