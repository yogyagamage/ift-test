name: Validation de la sélection des présentations

on:
  pull_request_target:
    paths:
      - 'presentations/Semaine*/readme.md'

jobs:
  valider-et-approuver:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write  # For auto merging
      issues: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Obtenir les fichiers modifiés
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: presentations/Semaine*/readme.md
          base_sha: ${{ github.event.pull_request.base.sha }}
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Valider les changements
        id: validate
        run: |
          # Check if only one readme file was changed
          changed_files=(${{ steps.changed-files.outputs.all_changed_files }})
          if [ ${#changed_files[@]} -ne 1 ]; then
            echo "Erreur: Un seul fichier readme.md doit être modifié"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          file=${changed_files[0]}
          
          # Check if file matches expected pattern
          if [[ ! "$file" =~ ^presentations/Semaine[0-9]{2}/readme\.md$ ]]; then
            echo "Erreur: Le fichier ne correspond pas au pattern attendu presentations/SemaineXX/readme.md"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Get the diff for the changed file
          git diff ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} -- "$file" > diff.txt
          
          # Count lines that were added/removed (excluding context lines)
          added_lines=$(grep "^+" diff.txt | grep -v "^+++" | wc -l)
          removed_lines=$(grep "^-" diff.txt | grep -v "^---" | wc -l)
          
          # Extract actual changes (ignoring +/- prefixes)
          added_content=$(grep "^+" diff.txt | grep -v "^+++" | sed 's/^+//')
          removed_content=$(grep "^-" diff.txt | grep -v "^---" | sed 's/^-//')
          
          # Validate changes - allow any modifications to Nom and Présentation fields
          valid=false
          
          # Check if all changes are only to Nom or Présentation fields
          if [ $added_lines -gt 0 ] && [ $removed_lines -ge 0 ]; then
            all_valid=true
            
            # Check removed lines
            while IFS= read -r line; do
              if [ -n "$line" ]; then
                # Must be a Nom: or Présentation: field (with any content after)
                if ! echo "$line" | grep -qE "^[[:space:]]*-[[:space:]]*Nom:[[:space:]]*.*$|^[[:space:]]*-[[:space:]]*Présentation:[[:space:]]*.*$"; then
                  all_valid=false
                  break
                fi
              fi
            done <<< "$removed_content"
            
            # Check added lines - must be Nom: or Présentation: fields (can be empty or with content)
            if [ "$all_valid" = true ]; then
              while IFS= read -r line; do
                if [ -n "$line" ]; then
                  # Must be a Nom: or Présentation: field (with or without content)
                  if ! echo "$line" | grep -qE "^[[:space:]]*-[[:space:]]*Nom:[[:space:]]*.*$|^[[:space:]]*-[[:space:]]*Présentation:[[:space:]]*.*$"; then
                    all_valid=false
                    break
                  fi
                fi
              done <<< "$added_content"
            fi
            
            if [ "$all_valid" = true ]; then
              valid=true
            fi
          fi
          
          if [ "$valid" = true ]; then
            echo "valid=true" >> $GITHUB_OUTPUT
          else
            echo "Erreur: Les modifications ne correspondent pas aux patterns autorisés"
            echo "valid=false" >> $GITHUB_OUTPUT
          fi

      - name: Add approval label
        if: steps.validate.outputs.valid == 'true'
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          gh pr review ${{ github.event.pull_request.number }} --approve --body "Auto-approuvé."
          
          # Merge
          gh pr merge ${{ github.event.pull_request.number }} --squash

      - name: Comment on invalid PR
        if: steps.validate.outputs.valid == 'false'
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "Cette PR ne peut pas être auto-approuvée. Seules les modifications suivantes sont autorisées dans les fichiers readme:
          
          1. Modifier un seul champ 'Nom:' de vide à rempli (ex: 'Nom:' → 'Nom: Tim Toady')
          2. Modifier un champ 'Nom:' et son champ 'Présentation:' correspondant
          3. Modifier un seul champ 'Présentation:' de vide à rempli
          
          La PR est automatiquement fermée. Veuillez corriger votre contrition et vous assurer que vos modifications correspondent exactement à l'un de ces patterns et n'affectent qu'un seul fichier readme.md dans un dossier Semaine avant de soumettre une nouvelle PR."

          # Close the PR
          gh pr close ${{ github.event.pull_request.number }}
